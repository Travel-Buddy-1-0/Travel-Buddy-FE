import { useEffect, useState } from "react";
import { getHotelDetailApi } from "../../services/Bookings/HotelDetail";

export default function HotelSummaryCard({ hotelId }) {
  const [hotel, setHotel] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    if (!hotelId) return;

    const fetchHotel = async () => {
      setLoading(true);
      try {
        const data = await getHotelDetailApi(hotelId);

        // X·ª≠ l√Ω image n·∫øu d∆∞ d·∫•u "
        if (data.image) {
          data.image = data.image.replace(/^"|"$/g, "");
        }

        // Parse style ƒë·ªÉ l·∫•y amenities
        if (data.style) {
          try {
            data.style = JSON.parse(data.style);
          } catch (e) {
            data.style = { amenities: [] };
          }
        }

        setHotel(data);
      } catch (err) {
        console.error("L·ªói load hotel detail:", err);
        setHotel(null);
      } finally {
        setLoading(false);
      }
    };

    fetchHotel();
  }, [hotelId]);

  if (loading) return <p>ƒêang t·∫£i th√¥ng tin kh√°ch s·∫°n...</p>;
  if (!hotel) return <p>Kh√¥ng t√¨m th·∫•y th√¥ng tin kh√°ch s·∫°n.</p>;

  return (
    <div className="bg-white border border-gray-200 rounded-lg shadow-sm overflow-hidden w-[350px]">
      {/* ·∫¢nh kh√°ch s·∫°n */}
      <img src={hotel.image} alt={hotel.name} className="w-full h-48 object-cover" />

      {/* N·ªôi dung */}
      <div className="p-4 space-y-2">
        {/* Stars + Icon */}
      <div className="flex items-center space-x-1 text-yellow-500">
  {Array.from({ length: hotel.style?.stars || 2 }).map((_, i) => (
    <span key={i}>‚òÖ</span>
  ))}
  <span className="bg-yellow-100 text-yellow-700 text-xs px-1.5 py-0.5 rounded">üëç</span>
</div>


        {/* T√™n kh√°ch s·∫°n */}
        <h2 className="text-lg font-bold">{hotel.name}</h2>

        {/* ƒê·ªãa ch·ªâ */}
        <p className="text-gray-600 text-sm">{hotel.address}</p>

        {/* V·ªã tr√≠ */}
        <p className="text-green-600 text-sm">
          V·ªã tr√≠ xu·∫•t s·∫Øc ‚Äî <span className="font-semibold">{hotel.averageRating.toFixed(1)}</span>
        </p>

        {/* Amenities */}
        <div className="flex flex-wrap gap-2 mt-2">
          {hotel.style?.amenities?.map((amenity, index) => (
            <span
              key={index}
              className="bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded-full border border-gray-300"
            >
              {amenity}
            </span>
          ))}
        </div>
      </div>
    </div>
  );
}
